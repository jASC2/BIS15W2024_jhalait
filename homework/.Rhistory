geom_col()+
coord_flip()
uc_ug_only %>%
select(campus, adm_rate) %>%
arrange(desc(adm_rate))
uc_ug_only %>%
select(campus, pcip26) %>%
ggplot(mapping = aes(x=campus, y=pcip26))+
geom_col()+
coord_flip()
uc_ug_only %>%
select(campus, pcip26) %>%
arrange(desc(pcip26))
knitr::opts_chunk$set(echo = TRUE)
deserts %>%
filter(species == "merriami") %>%
ggplot(mapping=aes(x=year))+
geom_bar()
library(tidyverse)
library(RColorBrewer)
library(paletteer)
library(janitor)
options(scipen=999) #cancels the use of scientific notation for the session
homerange <- read_csv("data/Tamburelloetal_HomeRangeDatabase.csv", na = c("", "NA", "\\"))
deserts <- read_csv("data/surveys_complete.csv")
homerange %>%
ggplot(mapping=aes(x=taxon, y=log10.mass)+
geom_boxplot(na.rm = T)
homerange %>%
ggplot(mapping=aes(x=taxon, y=log10.mass))+
geom_boxplot(na.rm = T)
h <- homerange %>%
ggplot(mapping=aes(x=taxon, y=log10.mass))+
geom_boxplot(na.rm = T)
homerange %>%
ggplot(mapping=aes(x=taxon, y=log10.mass, fill=taxon))+
geom_boxplot(na.rm = T)
homerange %>%
ggplot(mapping=aes(x=taxon, y=log10.mass))+
geom_boxplot(na.rm = T)
homerange %>%
ggplot(mapping=aes(x=class, y=log10.mass))+
geom_boxplot(na.rm = T)
homerange %>%
ggplot(mapping=aes(x=class, y=log10.mass, fill=taxon))+
geom_boxplot(na.rm = T)
homerange %>%
ggplot(mapping=aes(x=class, y=log10.mass, fill=class))+
geom_boxplot(na.rm = T)
homerange %>%
ggplot(mapping=aes(x=class, y=log10.mass, group=taxa))+
geom_boxplot(na.rm = T)
homerange %>%
ggplot(mapping=aes(x=class, y=log10.mass, group = taxon))+
geom_boxplot(na.rm = T)
homerange %>%
ggplot(mapping=aes(x=class, y=log10.mass, fill = taxon))+
geom_boxplot(na.rm = T)
deserts %>%
filter(species_id == "DM" | species_id == "DS")
deserts %>%
filter(species_id == "DM" | species_id == "DS") %>%
mutate(year==as.factor(year)) %>% #converts the year variable to a factor
group_by(year, species_id) %>%
summarize(n=n(), .groups = keep) #.groups is just needed to avoid the error, it isn't necessary
deserts %>%
filter(species_id == "DM" | species_id == "DS") %>%
mutate(year==as.factor(year)) %>% #converts the year variable to a factor
group_by(year, species_id) %>%
summarize(n=n()) #.groups is just needed to avoid the error, it isn't necessary
deserts %>%
filter(species_id == "DM" | species_id == "DS") %>%
mutate(year==as.factor(year)) %>% #converts the year variable to a factor
group_by(year, species_id) %>%
summarize(n=n()) %>% #.groups = keep is just needed to avoid the error, it isn't necessary
pivot_wider(names_from = species_id, values_from = samples)
deserts %>%
filter(species_id == "DM" | species_id == "DS") %>%
mutate(year==as.factor(year)) %>% #converts the year variable to a factor
group_by(year, species_id) %>%
summarize(n=n()) %>% #.groups = keep is just needed to avoid the error, it isn't necessary
pivot_wider(names_from = species_id, values_from = m)
deserts %>%
filter(species_id == "DM" | species_id == "DS") %>%
mutate(year==as.factor(year)) %>% #converts the year variable to a factor
group_by(year, species_id, .groups = "keep") %>%
summarize(n=n()) %>% #.groups = keep is just needed to avoid the error, it isn't necessary
pivot_wider(names_from = species_id, values_from = m)
deserts %>%
filter(species_id == "DM" | species_id == "DS") %>%
mutate(year==as.factor(year)) %>% #converts the year variable to a factor
group_by(year, species_id, .groups = "keep") %>%
summarize(n=n()) %>% #.groups = keep is just needed to avoid the error, it isn't necessary
pivot_wider(names_from = species_id, values_from = n)
deserts %>%
filter(species_id == "DM" | species_id == "DS") %>%
mutate(year==as.factor(year)) %>% #converts the year variable to a factor
group_by(year, species_id, .groups = "keep") %>%
summarize(n=n()) %>% #.groups = keep is just needed to avoid the error, it isn't necessary
ggplot(aes(x=year, y=n, group=species_id, color=species_id))+
geom_line()
deserts %>%
filter(species_id == "DM" | species_id == "DS") %>%
mutate(year==as.factor(year)) %>% #converts the year variable to a factor
group_by(year, species_id, .groups = "keep") %>%
summarize(n=n()) %>% #.groups = keep is just needed to avoid the error, it isn't necessary
ggplot(aes(x=year, y=n, group=species_id, color=species_id))+
geom_line()+
geom_point(shape=2)+ #this is overlaying another (here a dot) plot over the line plot
theme(axis.text.x=element_text(angle=60, hjust=1))+
labs(title="Number of Samples for Species DM & DS")
deserts %>%
filter(species_id == "DM" | species_id == "DS") %>%
mutate(year==as.factor(year)) %>% #converts the year variable to a factor
group_by(year, species_id, .groups = "keep") %>%
summarize(n=n()) %>% #.groups = keep is just needed to avoid the error, it isn't necessary
ggplot(aes(x=year, y=n, group=species_id, color=species_id))+
geom_line()+
geom_point(shape=2)+ #this is overlaying another (here a dot) plot over the line plot
theme(axis.text.x=element_text(angle=60, hjust=1))+
labs(title="Number of Samples for Species DM & DS",
x="Year"
y="n")
deserts %>%
filter(species_id == "DM" | species_id == "DS") %>%
mutate(year==as.factor(year)) %>% #converts the year variable to a factor
group_by(year, species_id, .groups = "keep") %>%
summarize(n=n()) %>% #.groups = keep is just needed to avoid the error, it isn't necessary
ggplot(aes(x=year, y=n, group=species_id, color=species_id))+
geom_line()+
geom_point(shape=2)+ #this is overlaying another (here a dot) plot over the line plot
theme(axis.text.x=element_text(angle=60, hjust=1))+
labs(title="Number of Samples for Species DM & DS",
x="Year",
y="n")
deserts %>%
filter(species_id == "DM" | species_id == "DS") %>%
mutate(year==as.factor(year)) %>% #converts the year variable to a factor
group_by(year, species_id, .groups = "keep") %>%
summarize(n=n()) %>% #.groups = keep is just needed to avoid the error, it isn't necessary
ggplot(aes(x=year, y=n, group=species_id, color=species_id))+
geom_line()+
geom_point(shape=3)+ #this is overlaying another (here a dot) plot over the line plot
theme(axis.text.x=element_text(angle=60, hjust=1))+
labs(title="Number of Samples for Species DM & DS",
x="Year",
y="n")
deserts %>%
filter(species_id == "DM" | species_id == "DS") %>%
mutate(year==as.factor(year)) %>% #converts the year variable to a factor
group_by(year, species_id, .groups = "keep") %>%
summarize(n=n()) %>% #.groups = keep is just needed to avoid the error, it isn't necessary
ggplot(aes(x=year, y=n, group=species_id, color=species_id))+
geom_line()+
geom_point(shape=4)+ #this is overlaying another (here a dot) plot over the line plot
theme(axis.text.x=element_text(angle=60, hjust=1))+
labs(title="Number of Samples for Species DM & DS",
x="Year",
y="n")
deserts %>%
filter(species_id == "DM" | species_id == "DS") %>%
mutate(year==as.factor(year)) %>% #converts the year variable to a factor
group_by(year, species_id, .groups = "keep") %>%
summarize(n=n()) %>% #.groups = keep is just needed to avoid the error, it isn't necessary
ggplot(aes(x=year, y=n, group=species_id, color=species_id))+
geom_line()+
geom_point(shape=5)+ #this is overlaying another (here a dot) plot over the line plot
theme(axis.text.x=element_text(angle=60, hjust=1))+
labs(title="Number of Samples for Species DM & DS",
x="Year",
y="n")
deserts %>%
filter(species_id == "DM" | species_id == "DS") %>%
#converts the year variable to a factor
group_by(year, species_id, .groups = "keep") %>%
summarize(n=n()) %>% #.groups = keep is just needed to avoid the error, it isn't necessary
ggplot(aes(x=year, y=n, group=species_id, color=species_id))+
geom_line()+
geom_point(shape=5)+ #this is overlaying another (here a dot) plot over the line plot
theme(axis.text.x=element_text(angle=60, hjust=1))+
labs(title="Number of Samples for Species DM & DS",
x="Year",
y="n")
deserts %>%
filter(species_id == "DM" | species_id == "DS") %>%
mutate(year==as.factor(year)) %>% #converts the year variable to a factor
group_by(year, species_id, .groups = "keep") %>%
summarize(n=n()) %>% #.groups = keep is just needed to avoid the error, it isn't necessary
ggplot(aes(x=year, y=n, group=species_id, color=species_id))+
geom_line()+
geom_point(shape=5)+ #this is overlaying another (here a dot) plot over the line plot
theme(axis.text.x=element_text(angle=60, hjust=1))+
labs(title="Number of Samples for Species DM & DS",
x="Year",
y="n")
deserts %>%
filter(species_id == "DM" | species_id == "DS") %>%
mutate(year==as.factor(year)) %>% #converts the year variable to a factor
group_by(year, species_id, .groups = "keep") %>%
summarize(n=n()) %>% #.groups = keep is just needed to avoid the error, it isn't necessary
ggplot(aes(x=year, y=n, group=species_id, color=species_id))+
geom_line()+
geom_point(shape=5)+ #this is overlaying another (here a dot) plot over the line plot
theme(axis.text.x=element_text(angle=60, hjust=1))+
labs(title="Number of Samples for Species DM & DS",
x="Year",
y="n")
homerange %>%
ggplot(aes(x = log10.mass)) +
geom_histogram()+ #we can adjust the number of bins with the bins argument
labs(title = "Distribution of Body Mass")
homerange %>%
ggplot(aes(x = log10.mass)) +
geom_histogram(binds = 30)+ #we can adjust the number of bins with the bins argument
labs(title = "Distribution of Body Mass")
homerange %>%
ggplot(aes(x = log10.mass)) +
geom_histogram(binds = 10)+ #we can adjust the number of bins with the bins argument
labs(title = "Distribution of Body Mass")
homerange %>%
ggplot(aes(x = log10.mass)) +
geom_histogram(bins = 10)+ #we can adjust the number of bins with the bins argument
labs(title = "Distribution of Body Mass")
grDevices::colors()
homerange %>%
ggplot(aes(x = log10.mass)) +
geom_histogram(color = "black", fill = "wheat", bins=10)+
labs(title = "Distribution of Body Mass")
homerange %>%
ggplot(aes(x = log10.mass)) +
geom_histogram(color = "black", fill = "cornflowerblue", bins=10)+
labs(title = "Distribution of Body Mass")
homerange %>%
ggplot(aes(x = log10.mass)) +
geom_histogram(color = "black", fill = "seashell", bins=10)+
labs(title = "Distribution of Body Mass")
homerange %>%
ggplot(aes(x = log10.mass)) +
geom_histogram(color = "wheat", fill = "seashell", bins=10)+
labs(title = "Distribution of Body Mass")
homerange %>%
ggplot(aes(x = log10.mass)) +
geom_density(fill="deepskyblue4", alpha  =0.4, color = "black")+ #alpha is the transparency
labs(title = "Distribution of Body Mass")
homerange %>%
ggplot(aes(x=log10.mass)) +
geom_histogram(aes(y = after_stat(density)), fill = "deepskyblue4", alpha = 0.4, color = "black")+ #alpha controls transperancy
geom_density(color = "red")+
labs(title = "Distribution of Body Mass")
homerange %>%
ggplot(aes(x=log10.hra))+
geom_histogram(color = "wheat", fill = "cornflowerblue", bins=10)+
labs(title = "Distribution of Homerange)
homerange %>%
ggplot(aes(x=log10.hra))+
geom_histogram(color = "wheat", fill = "cornflowerblue")+
labs(title = "Distribution of Homerange")
homerange %>%
ggplot(aes(x=log10.hra))+ #only needs to specify an x
geom_histogram(color = "wheat", fill = "cornflowerblue", alpha = 0.3)+
labs(title = "Distribution of Homerange")
homerange %>%
ggplot(aes(x=log10.hra))+ #only needs to specify an x
geom_histogram(color = "wheat", fill = "cornflowerblue")+
geom_density(alpha = 0.3)
labs(title = "Distribution of Homerange")
homerange %>%
ggplot(aes(x=log10.hra))+ #only needs to specify an x
geom_histogram(color = "wheat", fill = "cornflowerblue")+
geom_density(alpha = 0.3)+
labs(title = "Distribution of Homerange")
homerange %>%
ggplot(aes(x=log10.hra))+ #only needs to specify an x
geom_density(color = "wheat", fill = "cornflowerblue")+
labs(title = "Distribution of Homerange")
homerange %>%
ggplot(aes(x=log10.hra))+ #only needs to specify an x
geom_histogram(aes(y=after_stat(density)), fill = "cornflowerblue")
geom_density(color = "wheat", alpha = 0.3)+
labs(title = "Distribution of Homerange")
homerange %>%
ggplot(aes(x=log10.hra))+ #only needs to specify an x
geom_histogram(aes(y=after_stat(density)), fill = "cornflowerblue")+
geom_density(color = "wheat", alpha = 0.3)+
labs(title = "Distribution of Homerange")
homerange %>%
ggplot(aes(x=log10.hra))+ #only needs to specify an x
geom_histogram(aes(y=after_stat(density)), fill = "cornflowerblue")+
geom_density(color = "royalblue", alpha = 0.3)+
labs(title = "Distribution of Homerange")
homerange %>%
select(log10.mass)
homerange %>%
select(log10.mass) %>%
summarize(min=min(log10.mass),
max=max(log10.mass))
summary(homerange$log10.mass)
homerange %>%
mutate(mass_category=case_when(log10.mass<=1.75 ~ "small"))
homerange %>%
mutate(mass_category=case_when(log10.mass<=1.75 ~ "small",
log10.mass> 1.75 & log10.mass<=2.75 ~ "medium",
log10.mass>2.75 ~"large"))
homerange %>%
mutate(mass_category=case_when(log10.mass<=1.75 ~ "small",
log10.mass> 1.75 & log10.mass<=2.75 ~ "medium",
log10.mass>2.75 ~"large")) %>%
ggplot(aes(x=mass_category, fill=trophic.guild))+
geom_bar(position="dodge")
summary(homerange$log10.hra)
install.packages("gtools")
#install.packages("gtools")
library(gtools)
quartile <- quantcut(homerange4log10.hra)
quartile <- quantcut(homerange$log10.hra)
table(quartiles)
quartile <- quantcut(homerange$log10.hra)
table(quartile)
homerange %>%
mutate(range_category = case_when(log10.hra<3.65 ~ "very small",
log10.hra>=3.65 & log10.hra<=4,59 ~ "small"
))
homerange %>%
mutate(range_category = case_when(log10.hra<3.65 ~ "very small",
log10.hra>=3.65 & log10.hra<=4.59 ~ "small"
))
homerange %>%
mutate(range_category = case_when(log10.hra<3.65 ~ "very small",
log10.hra>=3.65 & log10.hra<=4.59 ~ "small",
log10.hra>=4.59 & log10.hra<=6.02 ~ "medium",
log10.hra>=6.02 ~ "large"
))
homerange %>%
mutate(range_category = case_when(log10.hra<3.65 ~ "very small",
log10.hra>=3.65 & log10.hra<=4.59 ~ "small",
log10.hra>=4.59 & log10.hra<=6.02 ~ "medium",
log10.hra>=6.02 ~ "large"
)) %>%
ggplot(aes(x=range_category, fill=class))+
geom_bar(position="dodge", alpha = 0.6, color="black")
homerange %>%
mutate(range_category = case_when(log10.hra<3.65 ~ "very small",
log10.hra>=3.65 & log10.hra<=4.59 ~ "small",
log10.hra>=4.59 & log10.hra<=6.02 ~ "medium",
log10.hra>=6.02 ~ "large"
)) %>%
filter(range_category=="small") %>%
ggplot(aes(x=class, y=log10.mass,fill=class))+
geom_boxplot()
library(tidyverse)
library(RColorBrewer)
library(paletteer)
library(janitor)
options(scipen=999) #cancels the use of scientific notation for the session
p <- homerange %>%
ggplot(aes(x=taxon, fill=trophic.guild))+
geom_bar(na.rm=T, position="dodge")
homerange <- read_csv("data/Tamburelloetal_HomeRangeDatabase.csv", na = c("", "NA", "\\"))
p <- homerange %>%
ggplot(aes(x=taxon, fill=trophic.guild))+
geom_bar(na.rm=T, position="dodge")
View(p)
p + theme_linedraw()+
theme(axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
q <- homerange %>%
ggplot(mapping=aes(x=log10.mass, y=log10.preymass), fill=taxon)+
geom_point()
q <- homerange %>%
ggplot(mapping=aes(x=log10.mass, y=log10.preymass), fill=taxon)+
geom_point()
q
q <- homerange %>%
ggplot(mapping=aes(x=log10.mass, y=log10.preymass, fill=taxon))+
geom_point()
q
q <- homerange %>%
ggplot(mapping=aes(x=log10.mass, y=log10.preymass, color=taxon))+ #fill doesn't work in a scatterplot, use color
geom_point()
q
q <- homerange %>%
ggplot(mapping=aes(x=log10.mass, y=log10.preymass), color=taxon)+ #fill doesn't work in a scatterplot, use color
geom_point()
q
q <- homerange %>%
ggplot(mapping=aes(x=log10.mass, y=log10.preymass, color=taxon)+ #fill doesn't work in a scatterplot, use color
geom_point()
q
q <- homerange %>%
ggplot(mapping=aes(x=log10.mass, y=log10.preymass, color=taxon))+ #fill doesn't work in a scatterplot, use color
geom_point()
q
q+theme_classic()
q+theme_minimal()
p+theme_linedraw()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 60, hjust=1))+ #legend.position is another option to add in theme
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
p+theme_linedraw()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 60, hjust=1))+ #legend.position is another option to add in theme; angle changes the labels so they're written at an angle
labs(title = "Observations by Taxon in Homerange Data",
x = NULL, #removes the label from the x axis
y= "n",
fill= "Trophic Guild")
install.packages("ggthemes")
library(ggthemes)
ls("package:ggthemes")[grepl("theme_", ls("package:ggthemes"))]
p +
theme_fivethirtyeight()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
p +
theme_economist()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
p +
theme_economist()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 60, hjust=0))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
p +
theme_solarized()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 60, hjust=0))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
?RColorBrewer
display.brewer.pal(3,"BuPu") #sequential palette
display.brewer.pal(5,"BuPu") #sequential palette
display.brewer.pal(5,"Spectral") #sequential palette
p+scale_fill_brewer(palette = "Paired")+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
q+scale_color_brewer(palette = "Spectral")
q+scale_fill_brewer(palette = "Spectral")
q+scale_color_brewer(palette = "Spectral")
colors <- paletteer::palettes_d_names
View(colors)
my_palette <- paletteer_d("ggsci::nrc_npg") #must add the package name::palette
new_palette <- paletter_d("dutchmasters::milkmaid")
my_palette <- paletteer_d("ggsci::nrc_npg") #must add the package name::palette
new_palette <- paletter_d("dutchmasters::milkmaid")
my_palette <- paletteer_d("ggsci::nrc_npg") #must add the package name::palette
new_palette <- paletteer_d("dutchmasters::milkmaid")
barplot(rep(1,6), axes=FALSE, col=new_palette)
my_palette <- paletteer_d("ggsci::nrc_npg") #must add the package name::palette
new_palette <- paletteer_d("palettetown::seaking")
barplot(rep(1,6), axes=FALSE, col=new_palette)
p+scale_fill_manual(values=new_palette)+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
my_palette <- paletteer_d("ggsci::nrc_npg") #must add the package name::palette
new_palette <- paletteer_d("palettetown::porygon")
barplot(rep(1,6), axes=FALSE, col=new_palette)
p+scale_fill_manual(values=new_palette)+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
my_palette <- paletteer_d("ggsci::nrc_npg") #must add the package name::palette
new_palette <- paletteer_d("palettetown::gallade")
my_palette <- paletteer_d("ggsci::nrc_npg") #must add the package name::palette
new_palette <- paletteer_d("palettetown::galade")
homerange %>%
ggplot(aes(x=taxon, y=log10.mass))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 60, hjust=1))
homerange %>%
ggplot(aes(x=taxon, y=log10.mass))+
geom_boxplot()+
facet_wrap(~trophic.guild)+
theme(axis.text.x = element_text(angle = 60, hjust=1))
homerange %>%
ggplot(aes(x=taxon, y=log10.mass))+
geom_boxplot()+
facet_grid(trophic.guild~.)+
theme(axis.text.x = element_text(angle = 60, hjust=1))
homerange %>%
ggplot(aes(x=taxon, y=log10.mass))+
geom_boxplot()+
facet_grid(trophic.guild~thermoregulation)+
theme(axis.text.x = element_text(angle = 60, hjust=1))
