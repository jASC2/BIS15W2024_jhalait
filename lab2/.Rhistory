x <- 42
x
treatment <- 36
control <- 38
y <- 30 #as a reminder, the arrow is also known as 'gets.' This should always be used for the assignment of an object rather than '='.
my_experiment <- sum(treatment, control)
my_experiment
treatment+control #when tab complete options are listed, objects will be indicated by a purple square
else <- 12
?mean
venom_GT <- 270
chiron <- 261
veyron <- 268
270 + 261 + 268
mean(venom_GT, chiron, veyron)
(270 + 261 + 268)/3
venom_GT <- 270
chiron <- 261
veyron <- 268
#alternatively you can use 'c()' to concatenate
cars <- c(venom_GT, chiron, veyron)
#alternatively you can use 'c()' to concatenate
cars <- c(venom_GT, chiron, veyron)
mean(cars)
my_numeric <- 42 #most accurate
my_integer <- 2L #adding an L automatically denotes an integer aka removes decimal values
my_character <- "universe"
my_logical <- FALSE #these are also called 'booleans'
my_complex <- 2+4i
class(my_numeric)
is.integer(my_numeric) #is my_numeric an integer?
my_integer <-
as.integer(my_numeric) #create a new object specified as an integer
is.integer(my_numeric) #is my_numeric an integer?
?as.integer
my_missing <- NA
is.na(my_missing)
anyNA(my_missing)
new_vector <- c(7, 6.2, 5, 9, NA, 4, 9.8, 7, 3, 2)
mean(new_vector)
mean(new_vector, na.rm=T) #na.rm removes the NA values in the vector
my_vector <- c(10, 20, 30)
days_of_the_week <- c("Monday", "Tuesday", "Wednesday", "Thrusday", "Friday", "Saturday", "Sunday")
my_vector_sequence <- c(1:100)
my_vector_sequence
days_of_the_week[3]
my_vector_sequence[15]
my_vector_sequence[=15]
?[]
my_vector_sequence = 15
my_vector_sequence <- c(1:100) #this will produce a vector of the numbers 1 - 100.
my_vector_sequence
my_vector_sequence[15] #works but won't evaluate each number in the sequence
my_vector_sequence==15 #checks each position, to return a vector of the same size, for which each position is denoted either TRUE or FALSE depending on whether it meets the criteria specified.
my_vector_sequence <= 10
my_vector_sequence[my_vector_sequence<=10] #will look at the vector to evaluate the expression above and then return a vector of the values that are assigned TRUE
box_office <- c(Philosophers_Stone, Chamber_of_Secrets, Prisoner_of_Azkaban, Goblet_of_Fire, Order_of_the_Phoenix, Half_Blood_Prince, Deathly_Hallows_1, Deathly_Hallows_2)
Philosophers_Stone <- c(317.5, 657.1)
Chamber_of_Secrets <- c(261.9, 616.9)
Prisoner_of_Azkaban <- c(249.5, 547.1)
Goblet_of_Fire <- c(290.0, 606.8)
Order_of_the_Phoenix <- c(292.0, 647.8)
Half_Blood_Prince <- c(301.9, 632.4)
Deathly_Hallows_1 <- c(295.9, 664.3)
Deathly_Hallows_2 <- c(381.0, 960.5)
box_office <- c(Philosophers_Stone, Chamber_of_Secrets, Prisoner_of_Azkaban, Goblet_of_Fire, Order_of_the_Phoenix, Half_Blood_Prince, Deathly_Hallows_1, Deathly_Hallows_2)
box_office
harry_potter_matrix <- matrix(box_office, nrow = 8, byrow = T)
harry_potter_matrix
harry_potter_matrix <- matrix(box_office, nrow = 8, byrow = T)
harry_potter_matrix
harry_potter_matrix[1,2]
region <- c("US", "non-US")
region
titles <- c("Philosophers_Stone", "Chamber_of_Secrets", "Prisoner_of_Azkaban", "Goblet_of_Fire", "Order_of_the_Phoenix", "Half_Blood_Prince", "Deathly_Hallows_1", "Deathly_Hallows_2")
titles
colnames(harry_potter_matrix) <- region
rownames(harry_potter_matrix) <- titles
rownames(harry_potter_matrix) <- titles
harry_potter_matrix
global <- rowSums(harry_potter_matrix)
global
all_harry_potter_matrix <- cbind(harry_potter_matrix, global)
all_harry_potter_matrix
?colSums
?colSums
total <- colSums(harry_potter_matrix)
?rbind
?colSums
total <- colSums(harry_potter_matrix)
final_harry_potter_matrix <- rbind(all_harry_potter_matrix, total)
all_harry_potter_matrix <- rbind(all_harry_potter_matrix, total)
?colSums
total <- colSums(harry_potter_matrix)
total
all_harry_potter_matrix <- rbind(harry_potter_matrix, total)
all_harry_potter_matrix <- rbind(harry_potter_matrix, total)
all_harry_potter_matrix <- rbind(harry_potter_matrix, total)
harry_potter_matrix
all_harry_potter_matrix
?colSums
total <- colSums(all_harry_potter_matrix)
total
?colSums
total <- colSums(all_harry_potter_matrix)
total
all_harry_potter_matrix <- cbind(harry_potter_matrix, global)
all_harry_potter_matrix
?colSums
total <- colSums(all_harry_potter_matrix)
total
