UC_admit %>%
filter(year==input$x, campus==input$y, category==input$z) %>%
ggplot(aes(x=ethnicity, y=filtered_count_fr, fill=ethnicity))+
geom_col()+
theme(axis.text.x=element_text(angle=45, hjust=1))+
labs(title = "Enrollment Data by Ethnicity",
x = "Ethnicity",
y= "Number of Enrollees")
}) # closes the plot generating output
} # closes the server
shinyApp(ui, server)
ui <- fluidPage(titlePanel("UC System Undergraduate Admissions Visualizer"),
selectInput("x", "Please select the year to view:",
choices=c(2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018,
2019), selected=2010),
selectInput("y", "Please select a campus to view:",
choices=c("Berkeley","Davis","Irvine","Los_Angeles","Merced",
"Riverside","San_Diego","Santa_Barbara","Santa_Cruz"),
selected="Berkeley"),
selectInput("z", "Please select an admissions data category:",
choices=c("Applicants","Admits","Enrollees"),
selected="Applicants"),
plotOutput("plot", width="600px", height="500px")
) # closes the UI
server <- function(input, output, session) {} # closes the server
shinyApp(ui, server)
ui <- fluidPage(titlePanel("UC System Undergraduate Admissions Visualizer"),
selectInput("x", "Please select the year to view:",
choices=c(2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018,
2019), selected=2010),
selectInput("y", "Please select a campus to view:",
choices=c("Berkeley","Davis","Irvine","Los_Angeles","Merced",
"Riverside","San_Diego","Santa_Barbara","Santa_Cruz"),
selected="Berkeley"),
selectInput("z", "Please select an admissions data category:",
choices=c("Applicants","Admits","Enrollees"),
selected="Applicants"),
plotOutput("plot", width="600px", height="500px")
) # closes the UI
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit %>%
filter(year==input$x, campus==input$y, category==input$z) %>%
ggplot(aes(x=ethnicity, y=filtered_count_fr, fill="ethnicity"))+
geom_col()+
theme(axis.text.x=element_text(angle=45, hjust=1))+
labs(title = "Enrollment Data by Ethnicity",
x = "Ethnicity",
y= "Number of Enrollees")
}) # closes the plot generating output
} # closes the server
shinyApp(ui, server)
ui <- fluidPage(titlePanel("UC System Undergraduate Admissions Visualizer"),
selectInput("x", "Please select the year to view:",
choices=c(2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018,
2019), selected=2010),
selectInput("y", "Please select a campus to view:",
choices=c("Berkeley","Davis","Irvine","Los_Angeles","Merced",
"Riverside","San_Diego","Santa_Barbara","Santa_Cruz"),
selected="Berkeley"),
selectInput("z", "Please select an admissions data category:",
choices=c("Applicants","Admits","Enrollees"),
selected="Applicants"),
plotOutput("plot", width="600px", height="500px")
) # closes the UI
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit %>%
filter(academic_yr==input$x, campus==input$y, category==input$z) %>%
ggplot(aes(x=ethnicity, y=filtered_count_fr, fill="ethnicity"))+
geom_col()+
theme(axis.text.x=element_text(angle=45, hjust=1))+
labs(title = "Enrollment Data by Ethnicity",
x = "Ethnicity",
y= "Number of Enrollees")
}) # closes the plot generating output
} # closes the server
shinyApp(ui, server)
ui <- fluidPage(titlePanel("UC System Undergraduate Admissions Visualizer"),
selectInput("x", "Please select the year to view:",
choices=c(2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018,
2019), selected=2010),
selectInput("y", "Please select a campus to view:",
choices=c("Berkeley","Davis","Irvine","Los_Angeles","Merced",
"Riverside","San_Diego","Santa_Barbara","Santa_Cruz"),
selected="Berkeley"),
selectInput("z", "Please select an admissions data category:",
choices=c("Applicants","Admits","Enrollees"),
selected="Applicants"),
plotOutput("plot", width="600px", height="500px")
) # closes the UI
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit %>%
filter(academic_yr==input$x, campus==input$y, category==input$z) %>%
ggplot(aes(x=ethnicity, y=filtered_count_fr, fill=ethnicity))+
geom_col()+
theme(axis.text.x=element_text(angle=45, hjust=1))+
labs(title = "Enrollment Data by Ethnicity",
x = "Ethnicity",
y= "Number of Enrollees")
}) # closes the plot generating output
} # closes the server
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader("UC System Undergraduate Admissions Visualizer"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("x", "Please select the year to view:",
choices=c(2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018,
2019), selected=2010),
selectInput("y", "Please select a campus to view:",
choices=c("Berkeley","Davis","Irvine","Los_Angeles","Merced",
"Riverside","San_Diego","Santa_Barbara","Santa_Cruz"),
selected="Berkeley"),
selectInput("z", "Please select an admissions data category:",
choices=c("Applicants","Admits","Enrollees"),
selected="Applicants"),
plotOutput("plot", width="600px", height="500px")
) # closes the dashboardBody
) # closes the dashboardPage
ui <- dashboardPage(
dashboardHeader("UC System Undergraduate Admissions Visualizer"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("x", "Please select the year to view:",
choices=c(2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018,
2019), selected=2010),
selectInput("y", "Please select a campus to view:",
choices=c("Berkeley","Davis","Irvine","Los_Angeles","Merced",
"Riverside","San_Diego","Santa_Barbara","Santa_Cruz"),
selected="Berkeley"),
selectInput("z", "Please select an admissions data category:",
choices=c("Applicants","Admits","Enrollees"),
selected="Applicants"),
plotOutput("plot", width="600px", height="500px")
) # closes the dashboardBody
) # closes the dashboardPage
ui <- dashboardPage(
dashboardHeader("UC System Undergraduate Admissions Visualizer"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("x", "Please select the year to view:",
choices=c(2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018,
2019), selected=2010),
selectInput("y", "Please select a campus to view:",
choices=c("Berkeley","Davis","Irvine","Los_Angeles","Merced",
"Riverside","San_Diego","Santa_Barbara","Santa_Cruz"),
selected="Berkeley"),
selectInput("z", "Please select an admissions data category:",
choices=c("Applicants","Admits","Enrollees"),
selected="Applicants"),
plotOutput("plot", width="600px", height="500px")
) # closes the dashboardBody
) # closes the dashboardPage
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library("tidyverse")
library("palmerpenguins")
ui <- dashboardPage(
dashboardHeader(), #titles the app dashboard
dashboardSidebar(disable = T), #toggles off sidebar
dashboardBody(
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_depth_mm"),
sliderInput("pointsize", "Select the Point Size", min = 0.5, max = 3, value = 1, step = 0.5),
plotOutput("plot", width = "500px", height = "400px")
)
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
ggplot(penguins, aes_string(x = input$x, y = input$y, color="species")) +
geom_point(size=input$pointsize) +
theme_light()
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader("UC System Undergraduate Admissions Visualizer"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("x", "Please select the year to view:",
choices=c(2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018,
2019), selected=2010),
selectInput("y", "Please select a campus to view:",
choices=c("Berkeley","Davis","Irvine","Los_Angeles","Merced",
"Riverside","San_Diego","Santa_Barbara","Santa_Cruz"),
selected="Berkeley"),
selectInput("z", "Please select an admissions data category:",
choices=c("Applicants","Admits","Enrollees"),
selected="Applicants"),
plotOutput("plot", width="600px", height="500px")
) # closes the dashboardBody
) # closes the dashboardPage
ui <- dashboardPage(
dashboardHeader(), #titles the app dashboard
dashboardSidebar(disable = T), #toggles off sidebar
dashboardBody(
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"), selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"), selected = "bill_depth_mm"),
sliderInput("pointsize", "Select the Point Size", min = 0.5, max = 3, value = 1, step = 0.5),
plotOutput("plot", width = "500px", height = "400px")
)
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
ggplot(penguins, aes_string(x = input$x, y = input$y, color="species")) +
geom_point(size=input$pointsize) +
theme_light()
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("x", "Please select the year to view:",
choices=c(2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018,
2019), selected=2010),
selectInput("y", "Please select a campus to view:",
choices=c("Berkeley","Davis","Irvine","Los_Angeles","Merced",
"Riverside","San_Diego","Santa_Barbara","Santa_Cruz"),
selected="Berkeley"),
selectInput("z", "Please select an admissions data category:",
choices=c("Applicants","Admits","Enrollees"),
selected="Applicants"),
plotOutput("plot", width="600px", height="500px")
) # closes the dashboardBody
) # closes the dashboardPage
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit %>%
filter(academic_yr==input$x, campus==input$y, category==input$z) %>%
ggplot(aes(x=ethnicity, y=filtered_count_fr, fill=ethnicity))+
geom_col()+
theme(axis.text.x=element_text(angle=45, hjust=1))+
labs(title = "Enrollment Data by Ethnicity",
x = "Ethnicity",
y= "Number of Enrollees")
}) # closes the plot generating output
} # closes the server
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("x", "Please select the year to view:",
choices=c(2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018,
2019), selected=2010),
selectInput("y", "Please select a campus to view:",
choices=c("Berkeley","Davis","Irvine","Los_Angeles","Merced",
"Riverside","San_Diego","Santa_Barbara","Santa_Cruz"),
selected="Berkeley"),
selectInput("z", "Please select an admissions data category:",
choices=c("Applicants","Admits","Enrollees"),
selected="Applicants"),
plotOutput("plot", width="600px", height="500px")
) # closes the dashboardBody
) # closes the dashboardPage
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit %>%
filter(academic_yr==input$x, campus==input$y, category==input$z) %>%
ggplot(aes(x=ethnicity, y=filtered_count_fr, fill=ethnicity))+
geom_col()+
theme(axis.text.x=element_text(angle=45, hjust=1))+
labs(title = "Enrollment Data by Ethnicity",
x = "Ethnicity",
y= "Number of Enrollees")
}) # closes the plot generating output
} # closes the server
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("x", "Please select the year to view:",
choices=c(2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018,
2019), selected=2010),
selectInput("y", "Please select a campus to view:",
choices=c("Berkeley","Davis","Irvine","Los_Angeles","Merced",
"Riverside","San_Diego","Santa_Barbara","Santa_Cruz"),
selected="Berkeley"),
selectInput("z", "Please select an admissions data category:",
choices=c("Applicants","Admits","Enrollees"),
selected="Applicants"),
plotOutput("plot", width="600px", height="500px")
) # closes the dashboardBody
) # closes the dashboardPage
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit %>%
filter(academic_yr==input$x, campus==input$y, category==input$z, ethnicity!="All") %>%
ggplot(aes(x=ethnicity, y=filtered_count_fr, fill=ethnicity))+
geom_col()+
theme(axis.text.x=element_text(angle=45, hjust=1))+
labs(title = "Enrollment Data by Ethnicity",
x = "Ethnicity",
y= "Number of Enrollees")
}) # closes the plot generating output
} # closes the server
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("x", "Please select the year to view:",
choices=c(2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018,
2019), selected=2010),
selectInput("y", "Please select a campus to view:",
choices=c("Berkeley","Davis","Irvine","Los_Angeles","Merced",
"Riverside","San_Diego","Santa_Barbara","Santa_Cruz"),
selected="Berkeley"),
selectInput("z", "Please select an admissions data category:",
choices=c("Applicants","Admits","Enrollees"),
selected="Applicants"),
plotOutput("plot", width="600px", height="500px")
) # closes the dashboardBody
) # closes the dashboardPage
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit %>%
filter(academic_yr==input$x, campus==input$y, category==input$z, ethnicity!="All") %>%
ggplot(aes(x=ethnicity, y=filtered_count_fr, fill=ethnicity))+
geom_col()+
theme(axis.text.x=element_text(angle=45, hjust=1))+
labs(title = "Enrollment Data by Ethnicity",
x = "Ethnicity",
y= "Number of Enrollees")
}) # closes the plot generating output
} # closes the server
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("x", "Please select the year to view:",
choices=c(2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018,
2019), selected=2010),
selectInput("y", "Please select a campus to view:",
choices=c("Berkeley","Davis","Irvine","Los_Angeles","Merced",
"Riverside","San_Diego","Santa_Barbara","Santa_Cruz"),
selected="Berkeley"),
selectInput("z", "Please select an admissions data category:",
choices=c("Applicants","Admits","Enrollees"),
selected="Applicants"),
plotOutput("plot", width="600px", height="500px")
) # closes the dashboardBody
) # closes the dashboardPage
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit %>%
filter(academic_yr==input$x, campus==input$y, category==input$z, ethnicity!="All") %>%
ggplot(aes(x=ethnicity, y=filtered_count_fr, fill=ethnicity))+
geom_col()+
theme(axis.text.x=element_text(angle=45, hjust=1))+
labs(title = "Enrollment Data by Ethnicity",
x = "Ethnicity",
y= "Number of Enrollees")
}) # closes the plot generating output
} # closes the server
shinyApp(ui, server)
# NA Check
miss_var_summary(UC_admit)
summary(UC_admit)
UC_admit %>%
group_by(ethnicity) %>% summarize(n=n())
ui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("x", "Please select a demographic category to view:",
choices=c("African American", "American Indian", "Asian",
"Chicano/Latino", "International", "Unknown",
"White"), selected="African American"),
selectInput("y", "Please select a campus to view:",
choices=c("Berkeley","Davis","Irvine","Los_Angeles","Merced",
"Riverside","San_Diego","Santa_Barbara","Santa_Cruz"),
selected="Berkeley"),
selectInput("z", "Please select an admissions data category:",
choices=c("Applicants","Admits","Enrollees"),
selected="Applicants"),
plotOutput("plot", width="600px", height="500px")
) # closes the dashboardBody
) # closes the dashboardPage
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit %>%
filter(ethnicity==input$x, campus==input$y, category==input$z, ethnicity!="All") %>%
ggplot(aes(x=academic_yr, y=filtered_count_fr, fill=academic_yr))+
geom_line()+
theme(axis.text.x=element_text(angle=45, hjust=1))+
labs(title = "Yearly Admissions Data",
x = "Year",
y= "Total Count")
}) # closes the plot generating output
} # closes the server
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("x", "Please select a demographic category to view:",
choices=c("All", "African American", "American Indian", "Asian",
"Chicano/Latino", "International", "Unknown",
"White"), selected="All"),
selectInput("y", "Please select a campus to view:",
choices=c("Berkeley","Davis","Irvine","Los_Angeles","Merced",
"Riverside","San_Diego","Santa_Barbara","Santa_Cruz"),
selected="Berkeley"),
selectInput("z", "Please select an admissions data category:",
choices=c("Applicants","Admits","Enrollees"),
selected="Applicants"),
plotOutput("plot", width="600px", height="500px")
) # closes the dashboardBody
) # closes the dashboardPage
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit %>%
filter(ethnicity==input$x, campus==input$y, category==input$z) %>%
ggplot(aes(x=academic_yr, y=filtered_count_fr, fill=academic_yr))+
geom_line()+
theme(axis.text.x=element_text(angle=45, hjust=1))+
labs(title = "Yearly Admissions Data",
x = "Year",
y= "Total Count")
}) # closes the plot generating output
} # closes the server
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("x", "Please select the year to view:",
choices=c(2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018,
2019), selected=2010),
selectInput("y", "Please select a campus to view:",
choices=c("Berkeley","Davis","Irvine","Los_Angeles","Merced",
"Riverside","San_Diego","Santa_Barbara","Santa_Cruz"),
selected="Berkeley"),
selectInput("z", "Please select an admissions data category:",
choices=c("Applicants","Admits","Enrollees"),
selected="Applicants"),
plotOutput("plot", width="600px", height="500px")
) # closes the dashboardBody
) # closes the dashboardPage
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit %>%
filter(academic_yr==input$x, campus==input$y, category==input$z, ethnicity!="All") %>%
ggplot(aes(x=ethnicity, y=filtered_count_fr, fill=ethnicity))+
geom_col()+
theme(axis.text.x=element_text(angle=45, hjust=1))+
labs(title = "Admissions Data by Ethnicity",
x = "Ethnicity",
y= "Total Count")
}) # closes the plot generating output
} # closes the server
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("x", "Please select a demographic category to view:",
choices=c("All", "African American", "American Indian", "Asian",
"Chicano/Latino", "International", "Unknown",
"White"), selected="All"),
selectInput("y", "Please select a campus to view:",
choices=c("Berkeley","Davis","Irvine","Los_Angeles","Merced",
"Riverside","San_Diego","Santa_Barbara","Santa_Cruz"),
selected="Berkeley"),
selectInput("z", "Please select an admissions data category:",
choices=c("Applicants","Admits","Enrollees"),
selected="Applicants"),
plotOutput("plot", width="600px", height="500px")
) # closes the dashboardBody
) # closes the dashboardPage
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit %>%
filter(ethnicity==input$x, campus==input$y, category==input$z) %>%
ggplot(aes(x=academic_yr, y=filtered_count_fr, fill=academic_yr))+
geom_line()+
theme(axis.text.x=element_text(angle=45, hjust=1))+
labs(title = "Yearly Admissions Data",
x = "Year",
y= "Total Count")
}) # closes the plot generating output
} # closes the server
shinyApp(ui, server)
runApp('~/Desktop/BIS15W2024_jhalait/homework/hw13_apps/hw13_2.R')
runApp('~/Desktop/BIS15W2024_jhalait/homework/hw13_apps/hw13_2.R')
runApp('~/Desktop/BIS15W2024_jhalait/homework/hw13_apps/hw13_2.R')
runApp('~/Desktop/BIS15W2024_jhalait/homework/hw13_apps/hw13_3.R')
