library("tidyverse")
library("janitor")
life_history <- read_csv("data/mammal_lifehistories_v2.csv", na="-999") %>% clean_names()
View(life_history)
life_history %>%
ggplot(aes(x=order)) +
geom_bar()
life_history %>%
ggplot(aes(x=order)) +
geom_bar()
coord_flip()
life_history %>%
group_by(order) %>%
summarize(counts = n()) %>%
ggplot(aes(x=order, y=counts)) +
geom_col() #by default, this will take only one variable and records the counts in each of its categories
life_history %>%
group_by(order) %>%
summarize(counts = n()) %>%
ggplot(aes(x=order, y=n_counts)) +
geom_col() #this allows us to ass
life_history %>%
group_by(order) %>%
summarize(n_counts = n()) %>%
ggplot(aes(x=order, y=n_counts)) +
geom_col() #this allows us to ass
library("tidyverse")
library("janitor")
life_history <- read_csv("data/mammal_lifehistories_v2.csv", na="-999") %>% clean_names()
life_history %>%
ggplot(aes(x=order)) +
geom_bar() #by default, this will take only one variable and records the counts in each of its categories
life_history %>%
group_by(order) %>%
summarize(n_counts = n()) %>%
ggplot(aes(x=order, y=n_counts)) +
geom_col() #this allows us to assign a variable to the y-axis (that may or may not be counts)
#we'd need to use geom_col
life_history %>%
group_by(order) %>%
summarize(mean_mass = mean(mass, na.rm = T)) %>%
ggplot(aes(x=order)) +
geom_bar()
#we'd need to use geom_col
# life_history %>%
#   group_by(order) %>%
#   summarize(mean_mass = mean(mass, na.rm = T)) %>%
#   ggplot(aes(x=order)) +
#   geom_bar()
life_history %>%
group_by(order) %>%
summarize(mean_mass = mean(mass, na.rm = T)) %>%
ggplot(aes(x=order)) +
geom_col()
#we'd need to use geom_col
# life_history %>%
#   group_by(order) %>%
#   summarize(mean_mass = mean(mass, na.rm = T)) %>%
#   ggplot(aes(x=order)) +
#   geom_bar()
life_history %>%
group_by(order) %>%
summarize(mean_mass = mean(mass, na.rm = T)) %>%
ggplot(aes(x=order, y=mean_mass)) +
geom_col()
life_history %>%
group_by(order) %>%
summarize(mean_mass = mean(mass, na.rm = T)) %>%
ggplot(aes(x=order, y=mean_mass)) +
geom_bar()
#we'd need to use geom_col
# life_history %>%
#   group_by(order) %>%
#   summarize(mean_mass = mean(mass, na.rm = T)) %>%
#   ggplot(aes(x=order, y=mean_mass)) +
#   geom_bar()
life_history %>%
group_by(order) %>%
summarize(mean_mass = mean(mass, na.rm = T)) %>%
ggplot(aes(x=order, y=mean_mass)) +
geom_col()
options(scipen=999)#cancels scientific notation for the session
life_history %>%
group_by(order) %>%
summarize(mean_mass = mean(mass, na.rm = T)) %>%
ggplot(aes(x=order, y=mean_mass)) +
geom_col() +
scale_y_log10()
?reorder
life_history %>%
group_by(order) %>%
summarize(mean_mass = mean(mass, na.rm = T)) %>%
ggplot(aes(x=order, y=mean_mass)) +
geom_col() +
scale_y_log10() + #add this as an additional option
reorder()
life_history %>%
group_by(order) %>%
summarize(mean_mass = mean(mass, na.rm = T)) %>%
ggplot(aes(x=order, y=mean_mass)) +
geom_col() +
scale_y_log10() + #add this as an additional option
reorder
life_history %>%
group_by(order) %>%
summarize(mean_mass = mean(mass, na.rm = T)) %>%
ggplot(aes(x=reorder(order, mean_mass), y=mean_mass)) +
geom_col() +
scale_y_log10() + #add this as an additional option
life_history %>%
group_by(order) %>%
summarize(mean_mass = mean(mass, na.rm = T)) %>%
ggplot(aes(x=reorder(order, mean_mass), y=mean_mass)) +
geom_col() +
scale_y_log10() + #add this as an additional option
life_history %>%
group_by(order) %>%
summarize(mean_mass = mean(mass, na.rm = T)) %>%
ggplot(aes(x=reorder(order,mean_mass), y=mean_mass)) +
geom_col() +
scale_y_log10() + #add this as an additional option
life_history %>%
group_by(order) %>%
summarize(mean_mass = mean(mass, na.rm = T)) %>%
ggplot(aes(x=order, y=mean_mass)) +
geom_col() +
scale_y_log10() + #add this as an additional option
life_history %>%
group_by(order) %>%
summarize(mean_mass = mean(mass, na.rm = T)) %>%
ggplot(aes(x=order, y=mean_mass)) +
geom_col() +
scale_y_log10() + #add this as an additional option
life_history %>%
group_by(order) %>%
summarize(mean_mass = mean(mass, na.rm = T)) %>%
ggplot(aes(x=reorder(order,mean_mass), y=mean_mass)) +
geom_col() +
scale_y_log10() #add this as an additional option
life_history %>%
ggplot(aes(x=gestation, y=wean_mass)) +
geom_point()
life_history %>%
ggplot(aes(x=gestation, y=wean_mass)) +
geom_point() +
scale_y_log10()
life_history %>%
ggplot(aes(x = order, y = mass)) +
geom_boxplot()
life_history %>%
ggplot(aes(x = order, y = mass)) +
geom_boxplot() +
scale_y_log10()
elephants <- read_csv("data/elephantsMF.csv") %>% clean_names()
elephants %>%
ggplot(aes(x=age, y=height))+
geom_point()
elephants %>%
ggplot(aes(x=age, y=height)) +
geom_point() +
geom_smooth(method=lm, se=F)+
labs(title="Elephant Age vs. Height",
x="Age",
y="Height")
elephants %>%
ggplot(aes(x=age, y=height)) +
geom_point() +
geom_smooth(method=lm, se=F)+ #adds a LOBF
labs(title="Elephant Age vs. Height",
x="Age",
y="Height")+
theme(plot.title = element_text(size=rel(1.25), hjust=0.5)) #hjust refers to the justification of the title (0 = left, 0.5 = middle, and 1 = right)
elephants %>%
ggplot(aes(x=age, y=height)) +
geom_point() +
geom_smooth(method=lm, se=F)+ #adds a LOBF
labs(title="Elephant Age vs. Height",
x="Age",
y="Height")+
theme(plot.title = element_text(size=rel(1), hjust=0.5)) #hjust refers to the justification of the title (0 = left, 0.5 = middle, and 1 = right)
elephants %>%
ggplot(aes(x=age, y=height)) +
geom_point() +
geom_smooth(method=lm, se=F)+ #adds a LOBF
labs(title="Elephant Age vs. Height",
x="Age",
y="Height")+
theme(plot.title = element_text(size=rel(1.25), hjust=0)) #hjust refers to the justification of the title (0 = left, 0.5 = middle, and 1 = right), rel() takes the factor by which the font should be multiplied for the title
elephants %>%
ggplot(aes(x=sex, fill=sex))+ #fill is a grouping option
geom_bar()
life_history %>%
ggplot(aes(x=gestation, y=log10(mass), size=mass))+
geom_point(na.rm=T)
life_history <- read_csv("data/mammal_lifehistories_v2.csv", na="-999") %>% clean_names()
life_history %>%
ggplot(aes(x=gestation, y=log10(mass), size=mass))+
geom_point(na.rm=T)
library(tidyverse)
library(janitor)
library(palmerpenguins)
library(tidyverse)
library(janitor)
library(palmerpenguins)
options(scipen=999) #cancels the use of scientific notation for the session
homerange <-
read_csv("data/Tamburelloetal_HomeRangeDatabase.csv", na = c("", "NA", "\\"))
p <- homerange %>%
ggplot(aes(x= log10.mass, y= log10.hra))
p + geom_point(size=1)
p + geom_point(size=2)
p + geom_point(size=1)
p + geom_point(size=1) #the size of the dots is specified for a scatter plot in the geom_point() layer
View(homerange)
p + geom_point(fill=log10.hra) #the size of the dots is specified for a scatter plot in the geom_point() layer
p + geom_point(fill=order) #the size of the dots is specified for a scatter plot in the geom_point() layer
p + geom_col(fill=order) #the size of the dots is specified for a scatter plot in the geom_point() layer
p + geom_col(aes(color=order))
p + geom_point(aes(color=order))
p + geom_point(aes(shape=class, color=order)) #when adding this option at the plot-specification layer, it must be passed using 'aes(color=categorical variable)'
homerange %>% count(taxon, sort=T)
homerange %>%
counts()
homerange %>%
count()
homerange %>%
count(taxon, sort=T)
homerange %>%
count(taxon, sort=T) %>%
ggplot(mapping=aes(x=taxon))
homerange %>%
count(taxon, sort=T) %>%
ggplot(mapping=aes(x=taxon)) %>%
geom_bar()
homerange %>%
count(taxon, sort=T) %>%
ggplot(mapping=aes(x=taxon))+
geom_bar()
homerange %>%
count(taxon, sort=T) %>%
ggplot(mapping=aes(x=taxon, y=n))+
geom_col()
homerange %>%
count(taxon, sort=T) %>%
ggplot(mapping=aes(x=taxon, y=n))+
geom_col()+
labs(title="Taxon Counts",
x="Taxon",
y="Frequency in dataset")+
theme(plot.title = element_text(size=rel(1.25), hjust=0.5))
homerange %>%
count(taxon, sort=T) %>%
ggplot(mapping=aes(x=taxon, y=n, fill=trophic.guild))+
geom_col()+
labs(title="Taxon Counts",
x="Taxon",
y="Frequency in dataset")+
theme(plot.title = element_text(size=rel(1.25), hjust=0.5))
homerange %>%
ggplot(mapping=aes(x=taxon, fill=trophic.guild))+
geom_bar()+
labs(title="Taxon Counts",
x="Taxon",
y="Frequency in dataset")+
theme(plot.title = element_text(size=rel(1.25), hjust=0.5))
homerange %>%
ggplot(mapping=aes(x=taxon, fill=trophic.guild, position="dodge"))+
geom_bar()+
labs(title="Taxon Counts",
x="Taxon",
y="Frequency in dataset")+
theme(plot.title = element_text(size=rel(1.25), hjust=0.5))
homerange %>%
ggplot(mapping=aes(x=taxon, fill=trophic.guild))+
geom_bar(position="dodge")+
labs(title="Taxon Counts",
x="Taxon",
y="Frequency in dataset")+
theme(plot.title = element_text(size=rel(1.25), hjust=0.5))
homerange %>%
ggplot(mapping=aes(x=taxon, fill=trophic.guild))+
geom_bar(position="dodge")+ #this option must be passed at the plot-specification layer to work
labs(title="Taxon Counts",
x="Taxon",
y="Frequency in dataset")+
theme(plot.title = element_text(size=rel(1.25), hjust=0.5))+
coord_flip()
homerange %>%
ggplot(aes(x = taxon, fill = trophic.guild))+
geom_bar(position = position_fill())+
scale_y_continuous(labels = scales::percent)+
coord_flip()
penguins %>%
ggplot(aes(x=island, fill=species))+
geom_bar
penguins %>%
ggplot(aes(x=island, fill=species))+
geom_bar()
penguins %>%
ggplot(aes(x=island, fill=species))+
geom_bar(position="dodge")
penguins %>%
ggplot(aes(x=island, fill=sex))+
geom_bar(position="dodge")
penguins %>%
ggplot(aes(x=island, fill=sex, na.rm = T))+
geom_bar(position="dodge")
homerange %>%
ggplot(aes(x = class, y = log10.mass)) +
geom_boxplot()
homerange %>%
ggplot(aes(x = class, y = log10.mass, group = taxon)) +
geom_boxplot()
homerange %>%
ggplot(aes(x = class, y = log10.mass, group = taxon, fill = taxon)) +
geom_boxplot()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(naniar)
deserts <- read_csv("data/surveys_complete.csv") %>% clean_names()
pwd
deserts <- read_csv("../data/surveys_complete.csv") %>% clean_names()
deserts <- read_csv("../lab11/data/surveys_complete.csv") %>% clean_names()
glimpse(deserts)
View(deserts)
#How many genera are represented:
deserts %>%
counts(genus)
#How many genera are represented:
deserts %>%
count(genus)
#How many species are represented:
deserts %>%
count(species)
#How many species are represented:
deserts %>%
count(species) %>%
arrange(desc(n))
glimpse(deserts)
miss_var_summary(deserts)
deserts %>%
tably(taxa)
deserts %>%
count(taxa)
deserts %>%
count(taxa) %>%
arrange(desc())
deserts %>%
count(taxa) %>%
arrange(desc(n))
deserts %>%
ggplot(mapping=aes(x=taxa))+
geom_bar()
deserts %>%
ggplot(mapping=aes(x=taxa))+
geom_bar()+
scale_y_log10()
deserts %>%
ggplot(mapping=aes(x=taxa, fill=plot_type))+
geom_bar()+
scale_y_log10()
deserts %>%
ggplot(mapping=aes(x=species, y=weight, group = taxa, fill = taxa, ))+
geom_boxplot(na.rm = T)
deserts %>%
ggplot(mapping=aes(x=species, y=weight, fill = taxa, ))+
geom_boxplot(na.rm = T)
deserts %>%
ggplot(mapping=aes(x=species, y=weight, fill = taxa))+
geom_boxplot(na.rm = T)+
coord_flip()
deserts %>%
group_by(species) %>%
summarize(range = max(weight) - min(weight))
deserts %>%
filter(is.na = F)
deserts %>%
filter(is.na == F)
deserts %>%
group_by(species) %>%
summarize(range = max(weight) - min(weight))
deserts %>%
group_by(species) %>%
summarize(n_measurements = n())
ggplot(mapping=aes(x=species, y=n_measurements, fill = taxa))+
geom_point(na.rm = T)
deserts %>%
group_by(species) %>%
summarize(n_measurements = n()) %>%
ggplot(mapping=aes(x=species, y=n_measurements, fill = taxa))+
geom_point(na.rm = T)
deserts %>%
group_by(species) %>%
summarize(n_measurements = n()) %>%
ggplot(mapping=aes(x=species, y=n_measurements, fill = taxa))+
geom_point(na.rm = T)
deserts %>%
group_by(species) %>%
summarize(n_measurements = n())
deserts %>%
group_by(species) %>%
summarize(n_measurements = n()) %>%
ggplot(mapping=aes(x=species, y=n_measurements))+
geom_point(na.rm = T)
deserts %>%
group_by(species) %>%
summarize(n_measurements = n()) %>%
ggplot(mapping=aes(x=species, y=n_measurements))+
geom_point(na.rm = T)+
coord_flip()
deserts %>%
filter(species == "merriami") %>%
ggplot(mapping=aes(x=year)) %>%
geom_bar()
deserts %>%
filter(species == "merriami") %>%
ggplot(mapping=aes(x=year))+
geom_bar()
deserts %>%
ggplot(mapping=aes(x=weight, y=hindfoot_length, fill=taxa))+
geom_point(na.rm = T)
deserts %>%
ggplot(mapping=aes(x=weight, y=hindfoot_length, fill=taxa))+
geom_point(na.rm = T)+
geom_smooth(method=lm, se=T, na.rm = T)
deserts %>%
ggplot(mapping=aes(x=weight, y=hindfoot_length, fill=taxa))+
geom_point(na.rm = T)+
geom_jitter()
deserts %>%
ggplot(mapping=aes(x=weight, y=hindfoot_length, fill=taxa))+
geom_point(na.rm = T)+
geom_jitter()
deserts %>%
ggplot(mapping=aes(x=weight, y=hindfoot_length, fill=taxa))+
geom_jitter()
deserts %>%
ggplot(mapping=aes(x=weight, y=hindfoot_length))+
geom_jitter()
deserts %>%
group_by(species) %>%
summarize(avg_weight = mean(weight, na.rm = T)) %>%
arrange(desc(avg_weight))
deserts %>%
mutate(ratio = weight/hindfoot_length)
deserts %>%
mutate(w_to_l_ratio = weight/hindfoot_length) %>%
ggplot(mapping=aes(x=))
deserts %>%
filter(species %in% c(albigula, spectabilis)) %>%
mutate(w_to_l_ratio = weight/hindfoot_length) %>%
ggplot(mapping=aes(x=))
deserts %>%
filter(species %in% c(albigula, spectabilis)) %>%
mutate(w_to_l_ratio = weight/hindfoot_length) %>%
ggplot(mapping=aes(x=))
deserts %>%
mutate(w_to_l_ratio = weight/hindfoot_length) %>%
ggplot(mapping=aes(x=species, y=w_to_l_ratio, fill=sex))
deserts %>%
mutate(w_to_l_ratio = weight/hindfoot_length) %>%
ggplot(mapping=aes(x=species, y=w_to_l_ratio, fill=sex))+
geom_boxplot(na.rm = T)
deserts %>%
mutate(w_to_l_ratio = weight/hindfoot_length) %>%
ggplot(mapping=aes(x=species, y=w_to_l_ratio, fill=sex))+
geom_boxplot(na.rm = T)+
coord_flip()
deserts %>%
filter(species %in% c("albigula", "spectabilis")) %>%
mutate(w_to_l_ratio = weight/hindfoot_length) %>%
ggplot(mapping=aes(x=species, y=w_to_l_ratio, fill=sex))+
geom_boxplot(na.rm = T)+
coord_flip()
deserts %>%
ggplot(mapping=aes(x=control, fill=taxa))+
geom_bar()
deserts %>%
ggplot(mapping=aes(x=plot_type, fill=taxa))+
geom_bar()
deserts %>%
ggplot(mapping=aes(x=plot_type, fill=taxa))+
geom_bar()+
coord_flip()
deserts %>%
ggplot(mapping=aes(x=plot_type, fill=taxa))+
geom_bar()+
coord_flip()+
labs(title="Plot Type Usage by Taxa",
x="Plot Type",
y="Frequency")+
theme(plot.title = element_text(size=rel(1.5), hjust=0.5))
