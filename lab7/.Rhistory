library("tidyverse")
library("janitor")
#install.packages("skimr")
library("skimr")
install.packages("skimr")
library("skimr")
install.packages("skimr")
?msleep
?msleep
library("tidyverse")
library("janitor")
#install.packages("skimr")
library("skimr")
?msleep
names(msleep)
library("palmerpenguins")
msleep24 <- select(msleep, name, vore) %>%
mutate(sleep_total_24 = sleep_total/24) %>%
filter(sleep_total_24 <= 0.3) %>%
arrange(desc(sleep_total_24))
msleep24 %>%
mutate(sleep_total_24 = sleep_total/24) %>%
filter(sleep_total_24 <= 0.3) %>%
arrange(desc(sleep_total_24))
msleep24 %>%
mutate(sleep_total_24 = sleep_total/24) %>%
filter(sleep_total_24 <= 0.3) %>%
arrange(desc(sleep_total_24)) %>%
select(msleep, name, vore, sleep_total_24)
msleep24 %>%
mutate(sleep_total_24 = sleep_total/24) %>%
filter(sleep_total_24 <= 0.3) %>%
arrange(desc(sleep_total_24)) %>%
select(msleep, name, vore, sleep_total_24)
msleep24 < - select(msleep, name, vore, sleep_total)
msleep24 < - msleep %>%
select(msleep, name, vore, sleep_total) %>%
mutate(sleep_total_24 = sleep_total/24) %>%
filter(sleep_total_24 <= 0.3) %>%
arrange(desc(sleep_total_24)) %>%
msleep24 < - msleep %>%
select(msleep, name, vore, sleep_total) %>%
mutate(sleep_total_24 = sleep_total/24) %>%
filter(sleep_total_24 <= 0.3) %>%
arrange(desc(sleep_total_24))
msleep24 <- msleep %>%
select(msleep, name, vore, sleep_total) %>%
mutate(sleep_total_24 = sleep_total/24) %>%
filter(sleep_total_24 <= 0.3) %>%
arrange(desc(sleep_total_24))
msleep24 <- msleep %>%
mutate(sleep_total_24 = sleep_total/24)
select(msleep, name, vore, sleep_total_24) %>%
filter(sleep_total_24 <= 0.3) %>%
arrange(desc(sleep_total_24))
msleep24 <- msleep %>%
mutate(sleep_total_24 = sleep_total/24) %>%
select(msleep, name, vore, sleep_total_24) %>%
filter(sleep_total_24 <= 0.3) %>%
arrange(desc(sleep_total_24))
msleep24 <- msleep %>%
mutate(sleep_total_24 = sleep_total/24) %>%
select(name, vore, sleep_total_24) %>%
filter(sleep_total_24 <= 0.3) %>%
arrange(desc(sleep_total_24))
View(msleep24)
#Professor's work
msleep24 <- msleep %>%
mutate(sleep_total_24 = sleep_total/24) %>%
select(name, vore, sleep_total_24, sleep_total) %>% #sleep_total was added as a way to double check sleep_total_24 was calculated correctly.
filter(sleep_total_24<=0.3) %>%
arrange(desc(sleep_total_24))
View(msleep24)
summary(msleep24)
skim(msleep24)
hist(msleep24$sleep_total_24)
head(msleep)
large <- msleep %>%
select(name, genus, bodywt, sleep_total) %>%
filter(bodywt > 200) %>%
arrange(desc(bodywt))
large
mean(large$sleep_total)
msleep %>%
filter(bodywt>200)
msleep %>%
filter(bodywt>200) %>%
summarize(mean_sleep_lg = mean(sleep_total))
msleep %>%
filter(bodywt<10) %>%
summarize(mean_sleep_sm = mean(sleep_total))
msleep %>%
filter(bodywt>200) %>%
summarize(mean_sleep_lg = mean(sleep_total),
min_sleep_lg = min(sleep_total),
max_sleep_lg = max(sleep_total),
sd_sleep_lg = sd(sleep_total),
total = n())
summary_table <- msleep %>%
filter(bodywt>200) %>%
summarize(mean_sleep_lg = mean(sleep_total),
min_sleep_lg = min(sleep_total),
max_sleep_lg = max(sleep_total),
sd_sleep_lg = sd(sleep_total),
total = n()) #total tells you the total number of rows in the data frame fed as an arguement
View(summary_table)
View(msleep24)
View(large)
msleep
msleep %>%
filter(Order = "Primates") %>%
summarize(mean_bodywt = mean(bodywt), min_bodywt = min(bodywt), max_bodywt = max(bodywt), total = n())
msleep %>%
filter(Order == "Primates") %>%
summarize(mean_bodywt = mean(bodywt), min_bodywt = min(bodywt), max_bodywt = max(bodywt), total = n())
msleep
msleep
msleep %>%
filter(order == "Primates") %>%
summarize(mean_bodywt = mean(bodywt), min_bodywt = min(bodywt), max_bodywt = max(bodywt), total = n())
msleep %>%
summarize(n_genera=n_distinct(genus)) #this will count the number of genera in msleep
msleep
msleep %>%
summarize(mean_sleep_total_all = mean(sleep_total),
max_sleep_total_all = max(sleep_total),
min_sleep_total_all = min(sleep_total),
total=n())
msleep %>%
group_by(vore) %>% #we are grouping by feeding ecology, a categorical variable (vore)
summarize(min_bodywt = min(bodywt),
max_bodywt = max(bodywt),
mean_bodywt = mean(bodywt),
total=n())
msleep %>%
group_by(order) %>%
summarize(mean_brainwt = mean(brainwt), total = n())
msleep
msleep %>%
group_by(order) %>%
summarize(mean_brainwt = mean(brainwt, na.rm=TRUE))
# The NAs correspond to orders who have at least one member species with no recorded brainwt.
msleep %>%
filter(order = "Carnivora") %>%
select(order, genus, brainwt)
# The NAs correspond to orders who have at least one member species with no recorded brainwt.
msleep %>%
filter(order == "Carnivora") %>%
select(order, genus, brainwt)
msleep %>%
filter(order == "Cetacea") %>%
select(order, genus, braintwt)
msleep %>%
filter(order == "Cetacea") %>%
select(order, genus, brainwt)
library("tidyverse")
library("janitor")
library("skimr")
library("palmerpenguins")
library("tidyverse")
library("janitor")
library("skimr")
library("palmerpenguins")
glimpse(penguins)
palmerpenguins %>%
group_by(island) %>%
summarize(mean_bill_length = mean(bill_length_mm, rm.na = T),
mean_bill_depth = mean(bill_depth_mm, rm.na = T),
mean_flipper_length = mean(flipper_length_mm, rm.na = T),
mean_body_mass = mean(body_mass_g, rm.na = T))
palmerpenguins %>%
group_by(island) %>%
summarize(mean_bill_length = mean(bill_length_mm, rm.na = T),
mean_bill_depth = mean(bill_depth_mm, rm.na = T),
mean_flipper_length = mean(flipper_length_mm, rm.na = T),
mean_body_mass = mean(body_mass_g, rm.na = T))
library("tidyverse")
library("janitor")
library("skimr")
library("palmerpenguins")
glimpse(penguins)
palmerpenguins %>%
group_by(island) %>%
summarize(mean_bill_length = mean(bill_length_mm, rm.na = T),
mean_bill_depth = mean(bill_depth_mm, rm.na = T),
mean_flipper_length = mean(flipper_length_mm, rm.na = T),
mean_body_mass = mean(body_mass_g, rm.na = T))
penguins %>%
group_by(island) %>%
summarize(mean_bill_length = mean(bill_length_mm, rm.na = T),
mean_bill_depth = mean(bill_depth_mm, rm.na = T),
mean_flipper_length = mean(flipper_length_mm, rm.na = T),
mean_body_mass = mean(body_mass_g, rm.na = T))
penguins %>%
filter(island == "Biscoe")
penguins %>%
group_by(island) %>%
summarize(mean_bill_length = mean(bill_length_mm, rm.na = T),
mean_bill_depth = mean(bill_depth_mm, rm.na = T),
mean_flipper_length = mean(flipper_length_mm, rm.na = T),
mean_body_mass = mean(body_mass_g, rm.na = T), n=n())
penguins %>%
group_by(island) %>%
summarize(number_NAs=sum(is.na(body_mass_g)))
penguins %>%
filter(!is.na(body_mass_g)) %>%
#filters all observations with NA out for this column
group_by(island) %>%
summarize(mean_bill_length = mean(bill_length_mm),
mean_bill_depth = mean(bill_depth_mm),
mean_flipper_length = mean(flipper_length_mm),
mean_body_mass = mean(body_mass_g), n=n())
penguins %>%
group_by(species, island) %>%
summarize(n=n(), .groups= 'keep')#the .groups argument here just prevents a warning message
penguins %>%
group_by(island) %>%
summarize(mean_bill_length = mean(bill_length_mm, rm.na = T),
mean_bill_depth = mean(bill_depth_mm, rm.na = T),
mean_flipper_length = mean(flipper_length_mm, rm.na = T),
mean_body_mass = mean(body_mass_g, rm.na = T), n=n())
penguins %>%
group_by(island) %>%
summarize(mean_bill_length = mean(bill_length_mm, na.rm = T),
mean_bill_depth = mean(bill_depth_mm, na.rm = T),
mean_flipper_length = mean(flipper_length_mm, na.rm = T),
mean_body_mass = mean(body_mass_g, na.rm = T), n=n())
penguins %>%
group_by(island) %>%
summarize(mean_bill_length = mean(bill_length_mm, na.rm = T),
mean_bill_depth = mean(bill_depth_mm, na.rm = T),
mean_flipper_length = mean(flipper_length_mm, na.rm = T),
mean_body_mass = mean(body_mass_g, na.rm = T), n=n())
penguins %>%
group_by(island) %>% #only works with categorical variables (variables that take on discrete values)
summarize(n=n())
penguins %>%
count(island, sort = T) #sort=T sorts the column in descending order
penguins %>%
count(island, species, sort = T) # sort=T will arrange in descending order
penguins %>%
tabyl(island, species)
penguins %>%
group_by(species) %>%
summarize(mean_bill_length = mean(bill_length_mm, na.rm = T))
penghins %>%
filter(is.na(sex)) %>%
count(island, species)
penguins %>%
filter(is.na(sex)) %>%
count(island, species)
penguins %>%
summarize(distinct_species = n_distinct(species),
distinct_island = n_distinct(island),
distinct_sex = n_distinct(sex))
penguins %>%
summarize(across(c(species, island, sex), n_distinct)) #arguments = variables of interest (as a vector) and the function you want to run on each of them
penguins %>%
summarize(across(contains("mm"), mean, na.rm=T))
